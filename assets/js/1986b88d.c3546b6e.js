"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3453],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>u});var n=a(7294);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,c=function(e,t){if(null==e)return{};var a,n,c={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(c[a]=e[a]);return c}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(c[a]=e[a])}return c}var s=n.createContext({}),l=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},p=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,c=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),h=l(a),u=c,k=h["".concat(s,".").concat(u)]||h[u]||d[u]||o;return a?n.createElement(k,r(r({ref:t},p),{},{components:a})):n.createElement(k,r({ref:t},p))}));function u(e,t){var a=arguments,c=t&&t.mdxType;if("string"==typeof e||c){var o=a.length,r=new Array(o);r[0]=h;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:c,r[1]=i;for(var l=2;l<o;l++)r[l]=a[l];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},2964:(e,t,a)=>{a.r(t),a.d(t,{frontMatter:()=>l,contentTitle:()=>p,metadata:()=>d,toc:()=>h,default:()=>k});var n=a(7462),c=a(3366),o=(a(7294),a(3905)),r=a(4996),i=a(9960),s=["components"],l={id:"createCKBAccounts",title:"Create CKB Accounts"},p=void 0,d={unversionedId:"develop/tutorials/createCKBAccounts",id:"develop/tutorials/createCKBAccounts",title:"Create CKB Accounts",description:"This guide introduces the concepts of CKB account, CKB capacity of an account, and how to create CKB accounts before the DApp development.",source:"@site/docs/develop/tutorials/createCKBAccounts.md",sourceDirName:"develop/tutorials",slug:"/develop/tutorials/createCKBAccounts",permalink:"/developer-tools/docs/develop/tutorials/createCKBAccounts",tags:[],version:"current",frontMatter:{id:"createCKBAccounts",title:"Create CKB Accounts"},sidebar:"Basics",previous:{title:"Set Up and Manage CKB Nodes by Using Tippy",permalink:"/developer-tools/docs/develop/tutorials/setupCKBNodes"},next:{title:"Write an SUDT Script by Capsule",permalink:"/developer-tools/docs/develop/tools/capsule/sudtbycapsule"}},h=[{value:"CKB Account",id:"ckb-account",children:[],level:2},{value:"CKB Capacity of an Account",id:"ckb-capacity-of-an-account",children:[],level:2},{value:"Ownership of CKB Capacity",id:"ownership-of-ckb-capacity",children:[],level:2},{value:"Prerequisites",id:"prerequisites",children:[],level:2},{value:"Create the Accounts by Using CKB-CLI",id:"create-the-accounts-by-using-ckb-cli",children:[{value:"Step 1. Download ckb-cli.",id:"step-1-download-ckb-cli",children:[],level:3},{value:"Step 2. Verify the ckb-cli tool is working and check the version.",id:"step-2-verify-the-ckb-cli-tool-is-working-and-check-the-version",children:[],level:3},{value:"Step 3. Create the account for Alice.",id:"step-3-create-the-account-for-alice",children:[],level:3},{value:"Step 4. Get the private key for the account of Alice.",id:"step-4-get-the-private-key-for-the-account-of-alice",children:[],level:3},{value:"Step 5. Get CKB capacity for the account of Alice.",id:"step-5-get-ckb-capacity-for-the-account-of-alice",children:[],level:3},{value:"Step 6. Check the balance for the account of Alice.",id:"step-6-check-the-balance-for-the-account-of-alice",children:[],level:3}],level:2},{value:"Get Two Accounts Provided by Genesis Issued Cells",id:"get-two-accounts-provided-by-genesis-issued-cells",children:[{value:"Step 1. Get the private key, lock args from the specs/dev.toml file.",id:"step-1-get-the-private-key-lock-args-from-the-specsdevtoml-file",children:[],level:3},{value:"Step 2. Generate the addresses for the two accounts.",id:"step-2-generate-the-addresses-for-the-two-accounts",children:[],level:3}],level:2}],u={toc:h};function k(e){var t=e.components,a=(0,c.Z)(e,s);return(0,o.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This guide introduces the concepts of CKB account, CKB capacity of an account, and how to create CKB accounts before the DApp development."),(0,o.kt)("p",null,"The accounts can be created by using ckb-cli. DEV chain also provides two accounts from the genesis cells that were issued with a considerable amount of capacity. "),(0,o.kt)("p",null,"You can create new accounts when developing your DApps by using the method demonstrated in this guide. "),(0,o.kt)("h2",{id:"ckb-account"},"CKB Account"),(0,o.kt)("p",null,"In CKB, an account is represented as a collection of ",(0,o.kt)("a",{parentName:"p",href:"https://docs.nervos.org/docs/reference/cell#live-cell"},"live cells")," (unspent cells) that contain the same lock script."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"A live cell refers to an unspent cell in CKB. The concept is similar to that of ",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Unspent_transaction_output"},"UTXO")," in Bitcoin's terminology. The full set of live cells in CKB is considered being the full state of CKB at that particular point in time. Any transaction on CKB consumes some live cells. After the transaction is submitted, the live cells become spent cells. Concurrently, some new live cells are created.")),(0,o.kt)("p",null,"The following example is a cell retrieved by Lumos query functions:"),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Lumos enriches the cell structure defined in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/nervosnetwork/rfcs/blob/master/rfcs/0002-ckb/0002-ckb.md#42-cell"},"CKB RFC: Cell")," with some customized fields (",(0,o.kt)("inlineCode",{parentName:"p"},"out_point"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"block_hash")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"block_number"),"). "))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"{\n  cell_output: {\n    capacity: '0x2ecbd7d7dc',\n    lock: {\n      code_hash: '0x9bd7e06f3ecf4be0f2fcd2188b23f1b9fcc88e5d4b65a8637b17723bbda3cce8',\n      hash_type: 'type',\n      args: '0x7e00660b8ab122bca3ba468c5b6eee71f40b7d8e'\n    },\n    type: undefined\n  },\n  out_point: {\n    tx_hash: '0x0db73acbbbb04bb1b52153d30ef7486b191b5e376dcc6bc1439b3a6ed2a451d8',\n    index: '0x0'\n  },\n  block_hash: '0x353b8153561400ed623ef295edb7488025ff517a119770cf0c9dca886f193c5a',\n  block_number: '0x16',\n  data: '0x'\n}\n")),(0,o.kt)("h2",{id:"ckb-capacity-of-an-account"},"CKB Capacity of an Account"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"capacity")," of a cell serves two purposes: "),(0,o.kt)("ul",{parentName:"blockquote"},(0,o.kt)("li",{parentName:"ul"},"It represents the amount of CKB tokens stored in the cell. "),(0,o.kt)("li",{parentName:"ul"},"It sets a limit on how much information can be stored in a cell. ")),(0,o.kt)("p",{parentName:"blockquote"},"The basic unit for CKB capacity is ",(0,o.kt)("strong",{parentName:"p"},"shannon"),". A larger unit, ",(0,o.kt)("strong",{parentName:"p"},"CKByte")," or just ",(0,o.kt)("strong",{parentName:"p"},"CKB")," is also in use. 1 CKB equals to 10",(0,o.kt)("sup",null,"8")," shannons. 1 CKB also means a cell can store 1 byte of information. For more information about how to calculate the cell information size, see ",(0,o.kt)("a",{parentName:"p",href:"http://docs.nervos.org/docs/reference/cell#cell-information-size-calculation"},"Nervos Docs: Cell Information Size Calculation"),".")),(0,o.kt)("p",null,"The CKB capacity of an account is the total ",(0,o.kt)("inlineCode",{parentName:"p"},"capacity")," of the live cells owned by the account."),(0,o.kt)("p",null,'Let us look at the following example. There are three live (unspent) cells in Charlie\'s account. The three cells contain the same lock script with the lock args "0x9118f7600d395709d08dc4596967d8c929982f1a". Each cell contains ',(0,o.kt)("strong",{parentName:"p"},"200")," (0x4a817c800 in hex) CKB. So the total amount of CKB capacity that Charlie owns is ",(0,o.kt)("strong",{parentName:"p"},"200 * 3 = 600")," CKB."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Cell 1"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"{\n  cell_output: {\n    capacity: '0x4a817c800',\n    lock: {\n      code_hash: '0x9bd7e06f3ecf4be0f2fcd2188b23f1b9fcc88e5d4b65a8637b17723bbda3cce8',\n      hash_type: 'type',\n      args: '0x9118f7600d395709d08dc4596967d8c929982f1a'\n    },\n    type: undefined\n  },\n  out_point: {\n    tx_hash: '0x513cd686d4e79a78d92598b525816d2d3253f1840b41e277473b3004208df2e6',\n    index: '0x0'\n  },\n  block_hash: '0x9ba2564a84886c7bb03385aa17a1f063af9c687bbd6d0955fbe567fff8075020',\n  block_number: '0x30',\n  data: '0x'\n}\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Cell 2"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"{\n  cell_output: {\n    capacity: '0x4a817c800',\n    lock: {\n      code_hash: '0x9bd7e06f3ecf4be0f2fcd2188b23f1b9fcc88e5d4b65a8637b17723bbda3cce8',\n      hash_type: 'type',\n      args: '0x9118f7600d395709d08dc4596967d8c929982f1a'\n    },\n    type: undefined\n  },\n  out_point: {\n    tx_hash: '0x301d8439c42b6448c9b23fddf69bb4671c8479a807afe8e2bbd8fc041130e2d5',\n    index: '0x0'\n  },\n  block_hash: '0xa621dd650b3da3045759072119b0b5b7ab2e15e87fdd96ca81e035c4f6848e3c',\n  block_number: '0x3c',\n  data: '0x'\n}\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Cell 3"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"{\n  cell_output: {\n    capacity: '0x4a817c800',\n    lock: {\n      code_hash: '0x9bd7e06f3ecf4be0f2fcd2188b23f1b9fcc88e5d4b65a8637b17723bbda3cce8',\n      hash_type: 'type',\n      args: '0x9118f7600d395709d08dc4596967d8c929982f1a'\n    },\n    type: undefined\n  },\n  out_point: {\n    tx_hash: '0xb90d91dffca55cae4bdf9c7b4c91ce5fe8f9e50bcd7510d28280eb2d4cfc0ee9',\n    index: '0x0'\n  },\n  block_hash: '0xa821a4637c220878baeaeb6b9e1412e9e4179d69c5a456ca9271fdb7f601c16e',\n  block_number: '0x43',\n  data: '0x'\n}\n")))),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"If an account seeks to perform transactional actions, such as transferring CKB to other accounts, the account must have sufficient CKB capacity that equals or exceeds the minimum CKB requirement for the transaction."),(0,o.kt)("p",{parentName:"div"},"For example, the minimum CKB capacity requirement for a regular transaction is 61 ",(0,o.kt)("a",{parentName:"p",href:"https://docs.nervos.org/docs/basics/glossary#shannon",title:"One CKByte is equal to 100,000,000 Shannons."},"CKB")," (6,100,000,000 shannons), and the minimum CKB capacity requirement for a DAO deposit transaction is 102 CKB (10,200,000,000 shannons)."),(0,o.kt)("p",{parentName:"div"},"Accounts on Testnet can request CKB capacity on ",(0,o.kt)("a",{parentName:"p",href:"https://faucet.nervos.org/"},"https://faucet.nervos.org"),". Accounts on DEV chain can obtain CKB capacity by mining blocks as miners. For more information about getting CKB capacity on DEV chain, see ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)(i.Z,{to:(0,r.Z)("/docs/develop/tutorials/createCKBAccounts#step-5-get-ckb-capacity-for-the-account-of-alice"),mdxType:"Link"},"step 5")),"."))),(0,o.kt)("h2",{id:"ownership-of-ckb-capacity"},"Ownership of CKB Capacity"),(0,o.kt)("p",null,"The ownership of CKB capacity for a CKB account is established through private key, public key, lock script, and CKB address."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Private Key"),": A private key is a string of letters and numbers that is normally stored in a wallet. The private key is used to generate signatures on messages to prove the ownership of the CKB capacity. It allows the user to send his/her CKB capacity to other addresses.",(0,o.kt)("br",null),"Example:",(0,o.kt)("br",null)),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"0x5503cc1d40b9e05a46fe8e1d4702786c624a1b5e774f964db6746ea754b4843a\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Public Key"),": A public key is derived from a private key. The public key is used to validate the signature generated by the private key without revealing the private key. ",(0,o.kt)("br",null),"Example:",(0,o.kt)("br",null)),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"0x03ff69140121e0f1b1533e451ead79849acae8cd4e1ad77feac2ec5186598a98a9\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Lock Script"),": A lock script consists of three key parameters, including ",(0,o.kt)("em",{parentName:"p"},"code_hash"),", ",(0,o.kt)("em",{parentName:"p"},"hash_type")," and ",(0,o.kt)("em",{parentName:"p"},"args"),". The unique identifier of an account, is the lock script used in the cells for this account. For more information, see ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/nervosnetwork/rfcs/blob/master/rfcs/0019-data-structures/0019-data-structures.md#Script"},"CKB RFC: Data Structures"),".",(0,o.kt)("br",null),"Example:",(0,o.kt)("br",null)),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"{\n    code_hash: '0x9bd7e06f3ecf4be0f2fcd2188b23f1b9fcc88e5d4b65a8637b17723bbda3cce8', \n    hash_type:'type',\n    args: '0x9118f7600d395709d08dc4596967d8c929982f1a'\n}\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"CKB Address"),": A CKB address packages a lock script into a single line in a verifiable and human-readable format. For more information, see ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/nervosnetwork/rfcs/blob/master/rfcs/0021-ckb-address-format/0021-ckb-address-format.md"},"CKB RFC: CKB Address Format"),".",(0,o.kt)("br",null),"Example:",(0,o.kt)("br",null)),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"ckt1qyqfzx8hvqxnj4cf6zxugktfvlvvj2vc9udqww932t\nckb1qyqfzx8hvqxnj4cf6zxugktfvlvvj2vc9udqntmwxh\n")),(0,o.kt)("p",{parentName:"li"},'The address with the "',(0,o.kt)("strong",{parentName:"p"},"ckb"),'" prefix is for CKB Mainnet. The address with the "',(0,o.kt)("strong",{parentName:"p"},"ckt"),'" prefix is for both Testnet and DEV chain.'))),(0,o.kt)("p",null,"The following figure shows the relationship between private key, public key, lock script, and CKB address."),(0,o.kt)("img",{src:(0,r.Z)("img/ownership.png")}),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("p",null,"The following prerequisites apply for creating CKB accounts:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A CKB node is installed and running through Tippy. For more information, see ",(0,o.kt)(i.Z,{to:(0,r.Z)("/docs/develop/tools/tippy#set-up-and-manage-ckb-nodes"),mdxType:"Link"},"Set Up and Manage CKB Nodes"),".")),(0,o.kt)("h2",{id:"create-the-accounts-by-using-ckb-cli"},"Create the Accounts by Using CKB-CLI"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"ckb-cli")," is included in the CKB pre-built installer package. It is a command line tool that provides the functions of RPC requests, creating CKB addresses, managing wallets, sending transactions, and depositing to Nervos DAO etc. These functions can help with debugging and testing during the development process. For more information, see ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/nervosnetwork/ckb-cli/wiki/Sub-Commands"},"ckb-cli Sub Commands"),".")),(0,o.kt)("h3",{id:"step-1-download-ckb-cli"},"Step 1. Download ckb-cli."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/nervosnetwork/ckb-cli"},"ckb-cli")," is a command line tool included in the CKB pre-built installer package for debugging CKB in development to facilitate user interaction with CKB."),(0,o.kt)("p",null,"This guide uses the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/nervosnetwork/ckb/releases/tag/v0.103.0"},"CKB 0.103.0")," version. All releases can be found on the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/nervosnetwork/ckb/releases"},"CKB releases")," page. If the package is already downloaded, go to step 2 directly."),(0,o.kt)("p",null,"Download the ",(0,o.kt)("strong",{parentName:"p"},".tar.gz")," file and unzip it. "),(0,o.kt)("h3",{id:"step-2-verify-the-ckb-cli-tool-is-working-and-check-the-version"},"Step 2. Verify the ckb-cli tool is working and check the version."),(0,o.kt)("p",null,"Navigate into the folder where the ckb-cli tool locates, then verify the tool is working."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:"{1}","{1}":!0},"$ cd ckb\n$ ckb-cli -V\n$ ckb-cli 0.101.2\n")),(0,o.kt)("h3",{id:"step-3-create-the-account-for-alice"},"Step 3. Create the account for Alice."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ ckb-cli account new\nYour new account is locked with a password. Please give a password. Do not forget this password.\nPassword: \nRepeat password: \naddress:\n  mainnet: ckb1qyqy7ql65p2l8k9qzxpfq7tfdh9a0qvgqe5s0s9zn5\n  testnet: ckt1qyqy7ql65p2l8k9qzxpfq7tfdh9a0qvgqe5sj4malg\nlock_arg: 0x4f03faa055f3d8a011829079696dcbd781880669\nlock_hash: 0xaeb696d84616400b1e02d15b39fee91eb163ef49fb56f5b946415310506fa74b\n")),(0,o.kt)("h3",{id:"step-4-get-the-private-key-for-the-account-of-alice"},"Step 4. Get the private key for the account of Alice."),(0,o.kt)("p",null,"The extended private key (a private key and a chain code) is exported to the ",(0,o.kt)("var",null,"alice")," file under the current working directory. The first line in the file is the private key of the account. The second line is the chain code."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'$ ckb-cli account export --extended-privkey-path alice --lock-arg 0x4f03faa055f3d8a011829079696dcbd781880669\nPassword: \nmessage: "Success exported account as extended privkey to: \\"alice\\", please use this file carefully"\n')),(0,o.kt)("h3",{id:"step-5-get-ckb-capacity-for-the-account-of-alice"},"Step 5. Get CKB capacity for the account of Alice."),(0,o.kt)("p",null,"To get CKB capacity for Alice on the ",(0,o.kt)("strong",{parentName:"p"},"DEV chain"),", specify Alice as the miner who receives mining rewards."),(0,o.kt)("p",null,"Assign the lock args of Alice to ",(0,o.kt)("b",null,"Block Assembler Lock Arg")," in the Edit Chain form and save the changes."),(0,o.kt)("img",{src:(0,r.Z)("img/tools/editchain.png"),width:"50%"}),(0,o.kt)("p",null," After the miner is specified, restart the CKB node and start the CKB miner on the Tippy dashboard."),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"CKBs are mature 4 ",(0,o.kt)("a",{parentName:"p",href:"https://docs.nervos.org/docs/basics/glossary#epoch",title:"An epoch is a period of time for a set of blocks. "},"epochs")," after being mined. In Nervos, an epoch is approximately four hours. For DEV chain, the epoch length is defined by the ",(0,o.kt)("inlineCode",{parentName:"p"},"genesis_epoch_length")," parameter in the ",(0,o.kt)("strong",{parentName:"p"},"dev.toml")," file. For more information about shortening the epoch length for DEV chain, see Step 4 of ",(0,o.kt)(i.Z,{to:(0,r.Z)("/docs/develop/tutorials/dapp#step-4-shorten-dev-chain-epoch-and-block-interval"),mdxType:"Link"},"Install a CKB node on DEV chain by using Tippy"),"."))),(0,o.kt)("h3",{id:"step-6-check-the-balance-for-the-account-of-alice"},"Step 6. Check the balance for the account of Alice."),(0,o.kt)("p",null,"To check the balance of Alice, execute the ",(0,o.kt)("inlineCode",{parentName:"p"},"ckb-cli wallet get-capacity --address <the Testnet address of the account>")," command."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:"{1}","{1}":!0},"$ ckb-cli wallet get-capacity --address ckt1qyqy7ql65p2l8k9qzxpfq7tfdh9a0qvgqe5sj4malg\ntotal: 18892511.5164096 (CKB)\n")),(0,o.kt)("h2",{id:"get-two-accounts-provided-by-genesis-issued-cells"},"Get Two Accounts Provided by Genesis Issued Cells"),(0,o.kt)("p",null,"There is another option to get two accounts. DEV chain provides the two accounts from genesis issued cells. Each account has a considerable amount of capacity that can be used  for development and testing without extra configuration or mining settings. "),(0,o.kt)("h3",{id:"step-1-get-the-private-key-lock-args-from-the-specsdevtoml-file"},"Step 1. Get the private key, lock args from the specs/dev.toml file."),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"dev.toml")," file is generated when the CKB node is initialized on DEV chain. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-toml",metastring:"{1,5,8,12}","{1,5,8,12}":!0},'# issue for random generated private key: d00c06bfd800d27397002dca6fb0993d5ba6399b4238b2f29ee9deb97593d2bc\n[[genesis.issued_cells]]\ncapacity = 20_000_000_000_00000000\nlock.code_hash = "0x9bd7e06f3ecf4be0f2fcd2188b23f1b9fcc88e5d4b65a8637b17723bbda3cce8"\nlock.args = "0xc8328aabcd9b9e8e64fbc566c4385c3bdeb219d7"\nlock.hash_type = "type"\n\n# issue for random generated private key: 63d86723e08f0f813a36ce6aa123bb2289d90680ae1e99d4de8cdb334553f24d\n[[genesis.issued_cells]]\ncapacity = 5_198_735_037_00000000\nlock.code_hash = "0x9bd7e06f3ecf4be0f2fcd2188b23f1b9fcc88e5d4b65a8637b17723bbda3cce8"\nlock.args = "0x470dcdc5e44064909650113a274b3b36aecb6dc7"\nlock.hash_type = "type"\n')),(0,o.kt)("h3",{id:"step-2-generate-the-addresses-for-the-two-accounts"},"Step 2. Generate the addresses for the two accounts."),(0,o.kt)("p",null,"The addresses of the two accounts can be generated by importing the private keys by using the ckb-cli tool."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Save ",(0,o.kt)("inlineCode",{parentName:"p"},"d00c06bfd800d27397002dca6fb0993d5ba6399b4238b2f29ee9deb97593d2bc")," to the ",(0,o.kt)("var",null,"genesis1")," file.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Save ",(0,o.kt)("inlineCode",{parentName:"p"},"63d86723e08f0f813a36ce6aa123bb2289d90680ae1e99d4de8cdb334553f24d")," to the ",(0,o.kt)("var",null,"genesis2")," file.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Generate the addresses for the two accounts."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:"{1,7}","{1,7}":!0},'ckb-cli account import --privkey-path "genesis1"\nPassword: \naddress:\n  mainnet: ckb1qyqvsv5240xeh85wvnau2eky8pwrhh4jr8ts6f6daz\n  testnet: ckt1qyqvsv5240xeh85wvnau2eky8pwrhh4jr8ts8vyj37\nlock_arg: 0xc8328aabcd9b9e8e64fbc566c4385c3bdeb219d7\nckb-cli account import --privkey-path "genesis2"\nPassword: \naddress:\n  mainnet: ckb1qyqywrwdchjyqeysjegpzw38fvandtktdhrsj8renf\n  testnet: ckt1qyqywrwdchjyqeysjegpzw38fvandtktdhrs0zaxl4\nlock_arg: 0x470dcdc5e44064909650113a274b3b36aecb6dc7\n')))))}k.isMDXComponent=!0}}]);